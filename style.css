/* 全体的なリセット */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

html, body {
    height: 100%;
    overflow: hidden;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}


body {
    height: 100%;
    overflow: hidden;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    background-color: #f0f0f0; /* 例：薄いグレーの背景 */
}

.gallery-container {
    display: flex;
    flex-direction: column;
    height: 100%;
    position: relative;
    /* background-color: transparent; 不要であれば削除 */
}

.wall-area {
    height: 85%;
    position: relative;
    overflow: hidden;
}

.wall-background {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-size: cover;
    background-position: center;
    opacity: 1;
    transition: opacity 0.5s ease-out;
    z-index: 1;
}

.wall-video {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover; /* 追加 */
    opacity: 0;
    transition: opacity 0.5s ease-out;
    z-index: 2;
}

/* ギャラリー内部（画像を格納し、横スクロールさせる部分） */
.gallery-inner {
    display: flex;
    align-items: center; /* 垂直方向の中央揃え */
    height: 100%; /* wall-areaの高さに合わせる */
    transform: translateX(0);
    transition: transform 0.5s ease-out;
    position: relative; /* gallery-inner自体はrelativeで、left:0で壁の左端に配置 */
                        /* これにより内部のflexboxレイアウトが適切に機能 */
    left: 0; /* wall-areaの左端に固定 */
    will-change: transform;
    z-index: 3; /* 動画より手前 */
}

/* 各画像アイテム（額縁） */
.gallery-item {
    cursor: pointer;
    text-decoration: none;
    flex-shrink: 0; /* アイテムが縮まないように */
    /* position: absolute; を削除 - Flexboxで位置制御 */

    /* 額縁のスタイル - これが額縁そのもの */
    padding: 10px; /* 白枠の厚み */
    border: 2px solid black; /* 黒枠の厚み */
    background-color: white; /* 白枠の背景色 */
    box-shadow: 0 10px 20px rgba(0,0,0,0.4); /* 額縁全体の影 */

    overflow: hidden; /* オーバーレイがはみ出さないように */
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    margin: 0 40px; /* アイテム間の基本的な左右マージン */
}

.gallery-item img {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover; /* 変更 (contain から cover へ) */
    transition: transform 0.3s ease;
}

/* ホバー時のオーバーレイとタイトル */
.gallery-item .overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.6);
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    opacity: 0;
    transition: opacity 0.3s ease;
    pointer-events: none;
    z-index: 1; /* 画像より手前に表示 */
}

.gallery-item:hover .overlay {
    opacity: 1;
}

.gallery-item .overlay-text {
    color: white;
    font-size: 1.1em;
    font-weight: bold;
    text-align: center;
    padding: 5px 10px;
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.3s ease, transform 0.3s ease;
    line-height: 1.3;
}

.gallery-item:hover .overlay-text {
    opacity: 1;
    transform: translateY(0);
}

/* ホバー時の拡大効果 */
.gallery-item:hover {
    transform: scale(1.03);
    box-shadow: 0 15px 30px rgba(0,0,0,0.6);
    z-index: 50; /* ホバーしたアイテムが手前に来るように */
}


.floor-area {
    height: 15%;
    background-color: transparent; /* 透過 */
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 100; /* 必要であれば最前面に */
}

.navigation-arrows {
    position: absolute;
    width: 100%;
    display: flex;
    justify-content: space-between;
    padding: 0 20px;
    top: 50%;
    transform: translateY(-50%);
    z-index: 101; /* 矢印をさらに前面に */
}

.arrow {
    font-size: 3rem;
    color: white;
    cursor: pointer;
    user-select: none;
    transition: color 0.3s ease;
}

.arrow:hover {
    color: #ccc;
}

.arrow.disabled {
    color: rgba(255, 255, 255, 0.3);
    cursor: default;
}
